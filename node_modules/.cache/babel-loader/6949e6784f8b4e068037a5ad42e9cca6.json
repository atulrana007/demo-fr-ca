{"ast":null,"code":"import _objectSpread from\"/home/raramuri/Videos/mcafee/language-test/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import PasswordPolicy from\"password-sheriff/lib/policy\";var charsets=require(\"password-sheriff\").charsets;export var AlphaNumericCheck=function AlphaNumericCheck(){var alphaNumericPolicy=new PasswordPolicy({contains:{expressions:[charsets.upperCase,charsets.lowerCase,charsets.numbers]}});return alphaNumericPolicy;};export var PasswordLengthWise=function PasswordLengthWise(length){var lengthPolicy=new PasswordPolicy({length:{minLength:length}});return lengthPolicy;};export var SpecialCharacterPolicy=function SpecialCharacterPolicy(){var specialCharacterPolicy=new PasswordPolicy({contains:{expressions:[charsets.specialCharacters]}});return specialCharacterPolicy;};export var IdenticalCharacters=function IdenticalCharacters(){var identicalCharsPolicy=new PasswordPolicy({identicalChars:{max:2}});return identicalCharsPolicy;};export var validatePassword=function validatePassword(rules,value,PasswordPolicyState,setPasswordPolicyState,setIsValid){var _rules$password_compl;var copyObj=_objectSpread({},PasswordPolicyState);var alphaNumericPolicy=AlphaNumericCheck();var lengthPolicy=rules.passwordPolicy!==\"none\"?PasswordLengthWise(rules===null||rules===void 0?void 0:(_rules$password_compl=rules.password_complexity_options)===null||_rules$password_compl===void 0?void 0:_rules$password_compl.min_length):null;var specialCharacterPolicy=SpecialCharacterPolicy();var identicalLessThan2Characters=IdenticalCharacters();switch(\"fair\"){case\"excellent\":setIsValid(true);if(value!==\"\"){copyObj.Non_empty_Password_Required=true;}else{setIsValid(false);copyObj.Non_empty_Password_Required=false;}if(identicalLessThan2Characters.check(value)){copyObj.No_more_than_2_identical_characters_in_a_row=true;}else{setIsValid(false);copyObj.No_more_than_2_identical_characters_in_a_row=false;}if(lengthPolicy.check(value)){copyObj.Length_Check=true;}else{setIsValid(false);copyObj.Length_Check=false;}if(specialCharacterPolicy.check(value)){copyObj.Special_characters=true;}else{setIsValid(false);copyObj.Special_characters=false;}if(alphaNumericPolicy.check(value)){copyObj.Lower_case_Upper_Case_Numbers=true;}else{setIsValid(false);copyObj.Lower_case_Upper_Case_Numbers=false;}break;case\"good\":setIsValid(true);if(value!==\"\"){copyObj.Non_empty_Password_Required=true;}else{setIsValid(false);copyObj.Non_empty_Password_Required=false;}if(lengthPolicy.check(value)){copyObj.Length_Check=true;}else{setIsValid(false);copyObj.Length_Check=false;}if(specialCharacterPolicy.check(value)){copyObj.Special_characters=true;}else{setIsValid(false);copyObj.Special_characters=false;}if(alphaNumericPolicy.check(value)){copyObj.Lower_case_Upper_Case_Numbers=true;}else{setIsValid(false);copyObj.Lower_case_Upper_Case_Numbers=false;}break;case\"fair\":setIsValid(true);if(value!==\"\"){copyObj.Non_empty_Password_Required=true;}else{setIsValid(false);copyObj.Non_empty_Password_Required=false;}if(lengthPolicy.check(value)){copyObj.Length_Check=true;}else{setIsValid(false);copyObj.Length_Check=false;}if(alphaNumericPolicy.check(value)){copyObj.Lower_case_Upper_Case_Numbers=true;}else{setIsValid(false);copyObj.Lower_case_Upper_Case_Numbers=false;}break;case\"low\":setIsValid(true);if(value!==\"\"){copyObj.Non_empty_Password_Required=true;}else{setIsValid(false);copyObj.Non_empty_Password_Required=false;}if(lengthPolicy.check(value)){copyObj.Length_Check=true;}else{setIsValid(false);copyObj.Length_Check=false;}break;case null:setIsValid(true);if(value!==\"\"){copyObj.Non_empty_Password_Required=true;}else{setIsValid(false);copyObj.Non_empty_Password_Required=false;}break;default:break;}console.log(copyObj);setPasswordPolicyState(copyObj);};","map":{"version":3,"sources":["/home/raramuri/Videos/mcafee/language-test/src/validator/PasswordValidator.js"],"names":["PasswordPolicy","charsets","require","AlphaNumericCheck","alphaNumericPolicy","contains","expressions","upperCase","lowerCase","numbers","PasswordLengthWise","length","lengthPolicy","minLength","SpecialCharacterPolicy","specialCharacterPolicy","specialCharacters","IdenticalCharacters","identicalCharsPolicy","identicalChars","max","validatePassword","rules","value","PasswordPolicyState","setPasswordPolicyState","setIsValid","copyObj","passwordPolicy","password_complexity_options","min_length","identicalLessThan2Characters","Non_empty_Password_Required","check","No_more_than_2_identical_characters_in_a_row","Length_Check","Special_characters","Lower_case_Upper_Case_Numbers","console","log"],"mappings":"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","sourcesContent":["import PasswordPolicy from \"password-sheriff/lib/policy\";\nconst charsets = require(\"password-sheriff\").charsets;\n\nexport const AlphaNumericCheck = () => {\n  const alphaNumericPolicy = new PasswordPolicy({\n    contains: {\n      expressions: [charsets.upperCase, charsets.lowerCase, charsets.numbers],\n    },\n  });\n  return alphaNumericPolicy;\n};\n\nexport const PasswordLengthWise = (length) => {\n  const lengthPolicy = new PasswordPolicy({\n    length: { minLength: length },\n  });\n  return lengthPolicy;\n};\n\nexport const SpecialCharacterPolicy = () => {\n  const specialCharacterPolicy = new PasswordPolicy({\n    contains: {\n      expressions: [charsets.specialCharacters],\n    },\n  });\n  return specialCharacterPolicy;\n};\n\nexport const IdenticalCharacters = () => {\n  var identicalCharsPolicy = new PasswordPolicy({\n    identicalChars: {\n      max: 2,\n    },\n  });\n  return identicalCharsPolicy;\n};\n\nexport const validatePassword = (\n  rules,\n  value,\n  PasswordPolicyState,\n  setPasswordPolicyState,\n  setIsValid\n) => {\n  const copyObj = {\n    ...PasswordPolicyState,\n  };\n  const alphaNumericPolicy = AlphaNumericCheck();\n  const lengthPolicy =\n    rules.passwordPolicy !== \"none\"\n      ? PasswordLengthWise(rules?.password_complexity_options?.min_length)\n      : null;\n  const specialCharacterPolicy = SpecialCharacterPolicy();\n  const identicalLessThan2Characters = IdenticalCharacters();\n\n  switch (\"fair\") {\n    case \"excellent\":\n      setIsValid(true);\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n      if (identicalLessThan2Characters.check(value)) {\n        copyObj.No_more_than_2_identical_characters_in_a_row = true;\n      } else {\n        setIsValid(false);\n        copyObj.No_more_than_2_identical_characters_in_a_row = false;\n      }\n      if (lengthPolicy.check(value)) {\n        copyObj.Length_Check = true;\n      } else {\n        setIsValid(false);\n        copyObj.Length_Check = false;\n      }\n      if (specialCharacterPolicy.check(value)) {\n        copyObj.Special_characters = true;\n      } else {\n        setIsValid(false);\n        copyObj.Special_characters = false;\n      }\n\n      if (alphaNumericPolicy.check(value)) {\n        copyObj.Lower_case_Upper_Case_Numbers = true;\n      } else {\n        setIsValid(false);\n        copyObj.Lower_case_Upper_Case_Numbers = false;\n      }\n      break;\n    case \"good\":\n      setIsValid(true);\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n      if (lengthPolicy.check(value)) {\n        copyObj.Length_Check = true;\n      } else {\n        setIsValid(false);\n        copyObj.Length_Check = false;\n      }\n      if (specialCharacterPolicy.check(value)) {\n        copyObj.Special_characters = true;\n      } else {\n        setIsValid(false);\n        copyObj.Special_characters = false;\n      }\n      if (alphaNumericPolicy.check(value)) {\n        copyObj.Lower_case_Upper_Case_Numbers = true;\n      } else {\n        setIsValid(false);\n        copyObj.Lower_case_Upper_Case_Numbers = false;\n      }\n      break;\n    case \"fair\":\n      setIsValid(true);\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n      if (lengthPolicy.check(value)) {\n        copyObj.Length_Check = true;\n      } else {\n        setIsValid(false);\n        copyObj.Length_Check = false;\n      }\n      if (alphaNumericPolicy.check(value)) {\n        copyObj.Lower_case_Upper_Case_Numbers = true;\n      } else {\n        setIsValid(false);\n        copyObj.Lower_case_Upper_Case_Numbers = false;\n      }\n      break;\n    case \"low\":\n      setIsValid(true);\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n      if (lengthPolicy.check(value)) {\n        copyObj.Length_Check = true;\n      } else {\n        setIsValid(false);\n        copyObj.Length_Check = false;\n      }\n      break;\n    case null:\n      setIsValid(true);\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n      break;\n    default:\n      break;\n  }\n  console.log(copyObj);\n  setPasswordPolicyState(copyObj);\n};\n"]},"metadata":{},"sourceType":"module"}