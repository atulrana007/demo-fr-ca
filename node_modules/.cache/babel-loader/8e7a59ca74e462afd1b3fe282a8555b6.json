{"ast":null,"code":"import PasswordPolicy from \"password-sheriff/lib/policy\";\n\nconst charsets = require(\"password-sheriff\").charsets;\n\nexport const AlphaNumericCheck = () => {\n  const alphaNumericPolicy = new PasswordPolicy({\n    contains: {\n      expressions: [charsets.upperCase, charsets.lowerCase, charsets.numbers]\n    }\n  });\n  return alphaNumericPolicy;\n};\n_c = AlphaNumericCheck;\nexport const PasswordLengthWise = length => {\n  const lengthPolicy = new PasswordPolicy({\n    length: {\n      minLength: length\n    }\n  });\n  return lengthPolicy;\n};\n_c2 = PasswordLengthWise;\nexport const SpecialCharacterPolicy = () => {\n  const specialCharacterPolicy = new PasswordPolicy({\n    contains: {\n      expressions: [charsets.specialCharacters]\n    }\n  });\n  return specialCharacterPolicy;\n};\n_c3 = SpecialCharacterPolicy;\nexport const IdenticalCharacters = () => {\n  var identicalCharsPolicy = new PasswordPolicy({\n    identicalChars: {\n      max: 2\n    }\n  });\n  return identicalCharsPolicy;\n};\n_c4 = IdenticalCharacters;\nexport const validatePassword = (rules, value, PasswordPolicyState, setPasswordPolicyState, setIsValid) => {\n  var _rules$password_compl;\n\n  const copyObj = { ...PasswordPolicyState\n  };\n  const alphaNumericPolicy = AlphaNumericCheck();\n  const lengthPolicy = rules.passwordPolicy !== \"none\" ? PasswordLengthWise(rules === null || rules === void 0 ? void 0 : (_rules$password_compl = rules.password_complexity_options) === null || _rules$password_compl === void 0 ? void 0 : _rules$password_compl.min_length) : null;\n  const specialCharacterPolicy = SpecialCharacterPolicy();\n  const identicalLessThan2Characters = IdenticalCharacters();\n\n  switch (\"fair\") {\n    case \"excellent\":\n      setIsValid(true);\n\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n\n      if (identicalLessThan2Characters.check(value)) {\n        copyObj.No_more_than_2_identical_characters_in_a_row = true;\n      } else {\n        setIsValid(false);\n        copyObj.No_more_than_2_identical_characters_in_a_row = false;\n      }\n\n      if (lengthPolicy.check(value)) {\n        copyObj.Length_Check = true;\n      } else {\n        setIsValid(false);\n        copyObj.Length_Check = false;\n      }\n\n      if (specialCharacterPolicy.check(value)) {\n        copyObj.Special_characters = true;\n      } else {\n        setIsValid(false);\n        copyObj.Special_characters = false;\n      }\n\n      if (alphaNumericPolicy.check(value)) {\n        copyObj.Lower_case_Upper_Case_Numbers = true;\n      } else {\n        setIsValid(false);\n        copyObj.Lower_case_Upper_Case_Numbers = false;\n      }\n\n      break;\n\n    case \"good\":\n      setIsValid(true);\n\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n\n      if (lengthPolicy.check(value)) {\n        copyObj.Length_Check = true;\n      } else {\n        setIsValid(false);\n        copyObj.Length_Check = false;\n      }\n\n      if (specialCharacterPolicy.check(value)) {\n        copyObj.Special_characters = true;\n      } else {\n        setIsValid(false);\n        copyObj.Special_characters = false;\n      }\n\n      if (alphaNumericPolicy.check(value)) {\n        copyObj.Lower_case_Upper_Case_Numbers = true;\n      } else {\n        setIsValid(false);\n        copyObj.Lower_case_Upper_Case_Numbers = false;\n      }\n\n      break;\n\n    case \"fair\":\n      setIsValid(true);\n\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n\n      if (lengthPolicy.check(value)) {\n        copyObj.Length_Check = true;\n      } else {\n        setIsValid(false);\n        copyObj.Length_Check = false;\n      }\n\n      if (alphaNumericPolicy.check(value)) {\n        copyObj.Lower_case_Upper_Case_Numbers = true;\n      } else {\n        setIsValid(false);\n        copyObj.Lower_case_Upper_Case_Numbers = false;\n      }\n\n      break;\n\n    case \"low\":\n      setIsValid(true);\n\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n\n      if (lengthPolicy.check(value)) {\n        copyObj.Length_Check = true;\n      } else {\n        setIsValid(false);\n        copyObj.Length_Check = false;\n      }\n\n      break;\n\n    case null:\n      setIsValid(true);\n\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n\n      break;\n\n    default:\n      break;\n  }\n\n  console.log(copyObj);\n  setPasswordPolicyState(copyObj);\n};\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"AlphaNumericCheck\");\n$RefreshReg$(_c2, \"PasswordLengthWise\");\n$RefreshReg$(_c3, \"SpecialCharacterPolicy\");\n$RefreshReg$(_c4, \"IdenticalCharacters\");","map":{"version":3,"sources":["/home/raramuri/Videos/McAfee-auth-Official/McAfee-odrplat-auth0-ui/src/validator/PasswordValidator.js"],"names":["PasswordPolicy","charsets","require","AlphaNumericCheck","alphaNumericPolicy","contains","expressions","upperCase","lowerCase","numbers","PasswordLengthWise","length","lengthPolicy","minLength","SpecialCharacterPolicy","specialCharacterPolicy","specialCharacters","IdenticalCharacters","identicalCharsPolicy","identicalChars","max","validatePassword","rules","value","PasswordPolicyState","setPasswordPolicyState","setIsValid","copyObj","passwordPolicy","password_complexity_options","min_length","identicalLessThan2Characters","Non_empty_Password_Required","check","No_more_than_2_identical_characters_in_a_row","Length_Check","Special_characters","Lower_case_Upper_Case_Numbers","console","log"],"mappings":"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","sourcesContent":["import PasswordPolicy from \"password-sheriff/lib/policy\";\nconst charsets = require(\"password-sheriff\").charsets;\n\nexport const AlphaNumericCheck = () => {\n  const alphaNumericPolicy = new PasswordPolicy({\n    contains: {\n      expressions: [charsets.upperCase, charsets.lowerCase, charsets.numbers],\n    },\n  });\n  return alphaNumericPolicy;\n};\n\nexport const PasswordLengthWise = (length) => {\n  const lengthPolicy = new PasswordPolicy({\n    length: { minLength: length },\n  });\n  return lengthPolicy;\n};\n\nexport const SpecialCharacterPolicy = () => {\n  const specialCharacterPolicy = new PasswordPolicy({\n    contains: {\n      expressions: [charsets.specialCharacters],\n    },\n  });\n  return specialCharacterPolicy;\n};\n\nexport const IdenticalCharacters = () => {\n  var identicalCharsPolicy = new PasswordPolicy({\n    identicalChars: {\n      max: 2,\n    },\n  });\n  return identicalCharsPolicy;\n};\n\nexport const validatePassword = (\n  rules,\n  value,\n  PasswordPolicyState,\n  setPasswordPolicyState,\n  setIsValid\n) => {\n  const copyObj = {\n    ...PasswordPolicyState,\n  };\n  const alphaNumericPolicy = AlphaNumericCheck();\n  const lengthPolicy =\n    rules.passwordPolicy !== \"none\"\n      ? PasswordLengthWise(rules?.password_complexity_options?.min_length)\n      : null;\n  const specialCharacterPolicy = SpecialCharacterPolicy();\n  const identicalLessThan2Characters = IdenticalCharacters();\n\n  switch (\"fair\") {\n    case \"excellent\":\n      setIsValid(true);\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n      if (identicalLessThan2Characters.check(value)) {\n        copyObj.No_more_than_2_identical_characters_in_a_row = true;\n      } else {\n        setIsValid(false);\n        copyObj.No_more_than_2_identical_characters_in_a_row = false;\n      }\n      if (lengthPolicy.check(value)) {\n        copyObj.Length_Check = true;\n      } else {\n        setIsValid(false);\n        copyObj.Length_Check = false;\n      }\n      if (specialCharacterPolicy.check(value)) {\n        copyObj.Special_characters = true;\n      } else {\n        setIsValid(false);\n        copyObj.Special_characters = false;\n      }\n\n      if (alphaNumericPolicy.check(value)) {\n        copyObj.Lower_case_Upper_Case_Numbers = true;\n      } else {\n        setIsValid(false);\n        copyObj.Lower_case_Upper_Case_Numbers = false;\n      }\n      break;\n    case \"good\":\n      setIsValid(true);\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n      if (lengthPolicy.check(value)) {\n        copyObj.Length_Check = true;\n      } else {\n        setIsValid(false);\n        copyObj.Length_Check = false;\n      }\n      if (specialCharacterPolicy.check(value)) {\n        copyObj.Special_characters = true;\n      } else {\n        setIsValid(false);\n        copyObj.Special_characters = false;\n      }\n      if (alphaNumericPolicy.check(value)) {\n        copyObj.Lower_case_Upper_Case_Numbers = true;\n      } else {\n        setIsValid(false);\n        copyObj.Lower_case_Upper_Case_Numbers = false;\n      }\n      break;\n    case \"fair\":\n      setIsValid(true);\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n      if (lengthPolicy.check(value)) {\n        copyObj.Length_Check = true;\n      } else {\n        setIsValid(false);\n        copyObj.Length_Check = false;\n      }\n      if (alphaNumericPolicy.check(value)) {\n        copyObj.Lower_case_Upper_Case_Numbers = true;\n      } else {\n        setIsValid(false);\n        copyObj.Lower_case_Upper_Case_Numbers = false;\n      }\n      break;\n    case \"low\":\n      setIsValid(true);\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n      if (lengthPolicy.check(value)) {\n        copyObj.Length_Check = true;\n      } else {\n        setIsValid(false);\n        copyObj.Length_Check = false;\n      }\n      break;\n    case null:\n      setIsValid(true);\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n      break;\n    default:\n      break;\n  }\n  console.log(copyObj);\n  setPasswordPolicyState(copyObj);\n};\n"]},"metadata":{},"sourceType":"module"}