{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/raramuri/Videos/McAfee-auth-Official/McAfee-odrplat-auth0-ui/src/providers/AccountContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport auth0 from \"auth0-js\";\nconst AccountContext = /*#__PURE__*/React.createContext({});\n\nconst AccountProvider = props => {\n  _s();\n\n  const {\n    locale\n  } = props;\n  const [isAuthenticated, setIsAuth] = useState(false);\n\n  const AuthenticateUser = authToken => {\n    localStorage.setItem(\"auth_token\", authToken);\n    setIsAuth(true);\n  };\n\n  const storeUserData = data => {\n    localStorage.setItem(\"userData\", JSON.stringify(data));\n  };\n\n  console.log(\"configs\", props); // const webAuth = new auth0.WebAuth({\n  //   domain: props.config.auth0Domain,\n  //   clientID: props.config.clientID,\n  //   redirectUri: props.config.callbackURL,\n  //   responseType: props.config.extraParams.response_type,\n  //   scope: props.config.extraParams.scope,\n  //   state: props.config.extraParams.state,\n  //   nonce: props.config.extraParams.nonce,\n  //   _csrf: props.config.extraParams._csrf,\n  //   audience: props.config.extraParams.audience,\n  //   overrides: { __tenant: props.config.auth0Tenant },\n  // });\n\n  const webAuth = new auth0.WebAuth({\n    domain: process.env.REACT_APP_AUTH0_DOMAIN,\n    clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n    responseType: \"token id_token\",\n    redirectUri: \"http://localhost:4040/authorize\"\n  });\n\n  const getSocialLogin = name => {\n    return new Promise((resolve, reject) => {\n      webAuth.authorize({\n        connection: name\n      }, (err, res) => {\n        if (err) {\n          console.log(err);\n          reject(err);\n        } else {\n          resolve(res);\n        }\n      });\n    });\n  };\n\n  const SignupWithPassword = (email, password) => {\n    const userMetadata = {\n      lang: locale\n    };\n    return new Promise((resolve, reject) => {\n      const variables = {\n        connection: \"Username-Password-Authentication\",\n        email,\n        password,\n        userMetadata\n      };\n      webAuth.signup(variables, (err, authResult) => {\n        if (err) {\n          console.log(err);\n          reject(err);\n          return;\n        }\n\n        if (authResult) {\n          window.origin = window.location.origin;\n          resolve(authResult);\n        }\n      });\n    });\n  };\n\n  const otpStart = email => {\n    return new Promise((resolve, reject) => {\n      const variables = {\n        email,\n        connection: \"email\",\n        send: \"code\"\n      };\n      webAuth.passwordlessStart(variables, (err, res) => {\n        if (err) {\n          console.log(err);\n          reject(err);\n        } else {\n          resolve(res);\n        }\n      });\n    });\n  };\n\n  const otpLogin = (email, otp) => {\n    return new Promise((resolve, reject) => {\n      webAuth.passwordlessLogin({\n        email,\n        connection: \"email\",\n        verificationCode: otp\n      }, (err, res) => {\n        if (err) {\n          reject(err);\n        } else {\n          window.origin = window.location.origin;\n          resolve(res);\n        }\n      });\n    });\n  };\n\n  const loginWithPassword = (username, password) => {\n    return new Promise((resolve, reject) => {\n      webAuth.login({\n        realm: \"Username-Password-Authentication\",\n        username,\n        password\n      }, (err, authResult) => {\n        if (err) {\n          console.log(err);\n          reject(err);\n          return;\n        }\n\n        if (authResult) {\n          window.origin = window.location.origin;\n          resolve(authResult);\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AccountContext.Provider, {\n    value: {\n      webAuth,\n      otpStart,\n      otpLogin,\n      loginWithPassword,\n      SignupWithPassword,\n      AuthenticateUser,\n      storeUserData,\n      isAuthenticated,\n      getSocialLogin\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountProvider, \"ca3fqSyPE13rndpUA2uTP0LZLYg=\");\n\n_c = AccountProvider;\nexport { AccountProvider, AccountContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountProvider\");","map":{"version":3,"sources":["/home/raramuri/Videos/McAfee-auth-Official/McAfee-odrplat-auth0-ui/src/providers/AccountContext.jsx"],"names":["React","useState","auth0","AccountContext","createContext","AccountProvider","props","locale","isAuthenticated","setIsAuth","AuthenticateUser","authToken","localStorage","setItem","storeUserData","data","JSON","stringify","console","log","webAuth","WebAuth","domain","process","env","REACT_APP_AUTH0_DOMAIN","clientID","REACT_APP_AUTH0_CLIENT_ID","responseType","redirectUri","getSocialLogin","name","Promise","resolve","reject","authorize","connection","err","res","SignupWithPassword","email","password","userMetadata","lang","variables","signup","authResult","window","origin","location","otpStart","send","passwordlessStart","otpLogin","otp","passwordlessLogin","verificationCode","loginWithPassword","username","login","realm","children"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport auth0 from \"auth0-js\";\n\nconst AccountContext = React.createContext({});\n\nconst AccountProvider = (props) => {\n  const { locale } = props;\n  const [isAuthenticated, setIsAuth] = useState(false);\n\n  const AuthenticateUser = (authToken) => {\n    localStorage.setItem(\"auth_token\", authToken);\n    setIsAuth(true);\n  };\n\n  const storeUserData = (data) => {\n    localStorage.setItem(\"userData\", JSON.stringify(data));\n  };\n  console.log(\"configs\", props);\n  // const webAuth = new auth0.WebAuth({\n  //   domain: props.config.auth0Domain,\n  //   clientID: props.config.clientID,\n  //   redirectUri: props.config.callbackURL,\n  //   responseType: props.config.extraParams.response_type,\n  //   scope: props.config.extraParams.scope,\n  //   state: props.config.extraParams.state,\n  //   nonce: props.config.extraParams.nonce,\n  //   _csrf: props.config.extraParams._csrf,\n  //   audience: props.config.extraParams.audience,\n  //   overrides: { __tenant: props.config.auth0Tenant },\n  // });\n  const webAuth = new auth0.WebAuth({\n    domain: process.env.REACT_APP_AUTH0_DOMAIN,\n    clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n    responseType: \"token id_token\",\n    redirectUri: \"http://localhost:4040/authorize\",\n  });\n  const getSocialLogin = (name) => {\n    return new Promise((resolve, reject) => {\n      webAuth.authorize(\n        {\n          connection: name,\n        },\n        (err, res) => {\n          if (err) {\n            console.log(err);\n            reject(err);\n          } else {\n            resolve(res);\n          }\n        }\n      );\n    });\n  };\n\n  const SignupWithPassword = (email, password) => {\n    const userMetadata = {\n      lang: locale,\n    };\n    return new Promise((resolve, reject) => {\n      const variables = {\n        connection: \"Username-Password-Authentication\",\n        email,\n        password,\n        userMetadata,\n      };\n      webAuth.signup(variables, (err, authResult) => {\n        if (err) {\n          console.log(err);\n          reject(err);\n          return;\n        }\n        if (authResult) {\n          window.origin = window.location.origin;\n          resolve(authResult);\n        }\n      });\n    });\n  };\n\n  const otpStart = (email) => {\n    return new Promise((resolve, reject) => {\n      const variables = { email, connection: \"email\", send: \"code\" };\n      webAuth.passwordlessStart(variables, (err, res) => {\n        if (err) {\n          console.log(err);\n          reject(err);\n        } else {\n          resolve(res);\n        }\n      });\n    });\n  };\n\n  const otpLogin = (email, otp) => {\n    return new Promise((resolve, reject) => {\n      webAuth.passwordlessLogin(\n        { email, connection: \"email\", verificationCode: otp },\n        (err, res) => {\n          if (err) {\n            reject(err);\n          } else {\n            window.origin = window.location.origin;\n            resolve(res);\n          }\n        }\n      );\n    });\n  };\n\n  const loginWithPassword = (username, password) => {\n    return new Promise((resolve, reject) => {\n      webAuth.login(\n        {\n          realm: \"Username-Password-Authentication\",\n          username,\n          password,\n        },\n        (err, authResult) => {\n          if (err) {\n            console.log(err);\n            reject(err);\n            return;\n          }\n          if (authResult) {\n            window.origin = window.location.origin;\n            resolve(authResult);\n          }\n        }\n      );\n    });\n  };\n\n  return (\n    <AccountContext.Provider\n      value={{\n        webAuth,\n        otpStart,\n        otpLogin,\n        loginWithPassword,\n        SignupWithPassword,\n        AuthenticateUser,\n        storeUserData,\n        isAuthenticated,\n        getSocialLogin,\n      }}\n    >\n      {props.children}\n    </AccountContext.Provider>\n  );\n};\n\nexport { AccountProvider, AccountContext };\n"]},"metadata":{},"sourceType":"module"}