{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { AccountContext } from \"../providers/AccountContext\";\nexport default function LoginContainer(props) {\n  _s();\n\n  const {\n    loginWithPassword,\n    otpLogin,\n    otpStart,\n    getSocialLogin\n  } = useContext(AccountContext);\n  const [LoginForm, setLoginForm] = useState({\n    email: \"\",\n    password: \"\",\n    otp: \"\",\n    otpAvailable: false,\n    isSubmitting: false\n  });\n  const [LoginError, setLoginError] = useState({\n    email: \"\",\n    isEmailError: \"\",\n    databaseError: \"\",\n    errorCode: \"\"\n  });\n  const [switchLogin, setToggle] = useState(false);\n  const [Continue, setContinue] = useState(false);\n\n  const onToggle = () => {\n    setToggle(!switchLogin);\n    setLoginError({ ...LoginError,\n      email: \"\",\n      databaseError: \"\",\n      errorCode: \"\"\n    });\n  };\n\n  const onPressContinue = () => {\n    setContinue(true);\n  };\n\n  const socialBtn = async name => {\n    try {\n      await getSocialLogin(name);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const validateEmail = email => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const onBlur = e => {\n    switch (e.target.name) {\n      case \"email\":\n        if (!e.target.value) {\n          setLoginError({ ...LoginError,\n            isEmailError: true,\n            [e.target.name]: \"Email is required\"\n          });\n        } else if (e.target.value && !validateEmail(e.target.value)) {\n          setLoginError({ ...LoginError,\n            isEmailError: true,\n            [e.target.name]: \"Email is not valid\"\n          });\n        } else {\n          setLoginError({ ...LoginError,\n            isEmailError: false,\n            [e.target.name]: \"\"\n          });\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onChange = e => {\n    setLoginForm({ ...LoginForm,\n      [e.target.name]: e.target.value\n    });\n    onBlur(e);\n  };\n\n  const onSubmit = async e => {\n    setLoginForm({ ...LoginForm,\n      isSubmitting: true\n    });\n    e.preventDefault();\n\n    if (!switchLogin) {\n      try {\n        await loginWithPassword(LoginForm.email, LoginForm.password);\n        setLoginError({ ...LoginError,\n          databaseError: \"\"\n        });\n        setLoginForm({ ...LoginForm,\n          isSubmitting: false\n        });\n      } catch (err) {\n        console.log(err);\n        setLoginForm({ ...LoginForm,\n          isSubmitting: false\n        });\n        setLoginError({ ...LoginError,\n          databaseError: err.description,\n          errorCode: err.code\n        });\n      }\n    } else {\n      try {\n        if (LoginForm.otpAvailable) {\n          await otpLogin(LoginForm.email, LoginForm.otp);\n          setLoginForm({ ...LoginForm,\n            isSubmitting: false\n          });\n        } else {\n          await otpStart(LoginForm.email);\n          setLoginForm({ ...LoginForm,\n            isSubmitting: false\n          });\n          setLoginForm({ ...LoginForm,\n            otpAvailable: true\n          });\n        }\n      } catch (err) {\n        console.log(err);\n        setLoginForm({ ...LoginForm,\n          isSubmitting: false\n        });\n        setLoginError({ ...LoginError,\n          databaseError: err.description,\n          errorCode: err.code\n        });\n      }\n    }\n  };\n\n  const getOtp = async () => {\n    try {\n      setToggle(!switchLogin);\n      await otpStart(LoginForm.email);\n      setLoginForm({ ...LoginForm,\n        otpAvailable: true\n      });\n    } catch (err) {\n      console.log(err);\n      setLoginError({ ...LoginError,\n        databaseError: err.description,\n        errorCode: err.code\n      });\n    }\n  };\n\n  const child = React.Children.only(props.children);\n  return /*#__PURE__*/React.cloneElement(child, { ...props,\n    onChange,\n    onToggle,\n    switchLogin,\n    onSubmit,\n    LoginForm,\n    LoginError,\n    Continue,\n    validateEmail,\n    onPressContinue,\n    getOtp,\n    socialBtn\n  });\n}\n\n_s(LoginContainer, \"QQWz27n8zdmGTuLSFG2aM87RrBU=\");\n\n_c = LoginContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginContainer\");","map":{"version":3,"sources":["/home/raramuri/Videos/McAfee-auth-Official/McAfee-odrplat-auth0-ui/src/containers/loginContainer.jsx"],"names":["React","useContext","useState","AccountContext","LoginContainer","props","loginWithPassword","otpLogin","otpStart","getSocialLogin","LoginForm","setLoginForm","email","password","otp","otpAvailable","isSubmitting","LoginError","setLoginError","isEmailError","databaseError","errorCode","switchLogin","setToggle","Continue","setContinue","onToggle","onPressContinue","socialBtn","name","err","console","log","validateEmail","re","test","String","toLowerCase","onBlur","e","target","value","onChange","onSubmit","preventDefault","description","code","getOtp","child","Children","only","children","cloneElement"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { AccountContext } from \"../providers/AccountContext\";\nexport default function LoginContainer(props) {\n    const { loginWithPassword, otpLogin, otpStart, getSocialLogin } =\n        useContext(AccountContext);\n\n    const [LoginForm, setLoginForm] = useState({\n        email: \"\",\n        password: \"\",\n        otp: \"\",\n        otpAvailable: false,\n        isSubmitting: false,\n    });\n    const [LoginError, setLoginError] = useState({\n        email: \"\",\n        isEmailError: \"\",\n        databaseError: \"\",\n        errorCode: \"\",\n    });\n    const [switchLogin, setToggle] = useState(false);\n\n    const [Continue, setContinue] = useState(false);\n\n    const onToggle = () => {\n        setToggle(!switchLogin);\n        setLoginError({\n            ...LoginError,\n            email: \"\",\n            databaseError: \"\",\n            errorCode: \"\",\n        });\n    };\n    const onPressContinue = () => {\n        setContinue(true);\n    };\n    const socialBtn = async (name) => {\n        try {\n            await getSocialLogin(name);\n        } catch (err) {\n            console.log(err);\n        }\n    };\n    const validateEmail = (email) => {\n        const re =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    };\n\n    const onBlur = (e) => {\n        switch (e.target.name) {\n            case \"email\":\n                if (!e.target.value) {\n                    setLoginError({\n                        ...LoginError,\n                        isEmailError: true,\n                        [e.target.name]: \"Email is required\",\n                    });\n                } else if (e.target.value && !validateEmail(e.target.value)) {\n                    setLoginError({\n                        ...LoginError,\n                        isEmailError: true,\n                        [e.target.name]: \"Email is not valid\",\n                    });\n                } else {\n                    setLoginError({\n                        ...LoginError,\n                        isEmailError: false,\n                        [e.target.name]: \"\",\n                    });\n                }\n                break;\n            default:\n                break;\n        }\n    };\n\n    const onChange = (e) => {\n        setLoginForm({\n            ...LoginForm,\n            [e.target.name]: e.target.value,\n        });\n        onBlur(e);\n    };\n\n    const onSubmit = async (e) => {\n        setLoginForm({\n            ...LoginForm,\n            isSubmitting: true,\n        });\n\n        e.preventDefault();\n        if (!switchLogin) {\n            try {\n                await loginWithPassword(LoginForm.email, LoginForm.password);\n                setLoginError({\n                    ...LoginError,\n                    databaseError: \"\",\n                });\n                setLoginForm({\n                    ...LoginForm,\n                    isSubmitting: false,\n                });\n            } catch (err) {\n                console.log(err);\n                setLoginForm({\n                    ...LoginForm,\n                    isSubmitting: false,\n                });\n                setLoginError({\n                    ...LoginError,\n                    databaseError: err.description,\n                    errorCode: err.code,\n                });\n            }\n        } else {\n            try {\n                if (LoginForm.otpAvailable) {\n                    await otpLogin(LoginForm.email, LoginForm.otp);\n                    setLoginForm({\n                        ...LoginForm,\n                        isSubmitting: false,\n                    });\n                } else {\n                    await otpStart(LoginForm.email);\n                    setLoginForm({\n                        ...LoginForm,\n                        isSubmitting: false,\n                    });\n                    setLoginForm({\n                        ...LoginForm,\n                        otpAvailable: true,\n                    });\n                }\n            } catch (err) {\n                console.log(err);\n                setLoginForm({\n                    ...LoginForm,\n                    isSubmitting: false,\n                });\n                setLoginError({\n                    ...LoginError,\n                    databaseError: err.description,\n                    errorCode: err.code,\n                });\n            }\n        }\n    };\n    const getOtp = async () => {\n        try {\n            setToggle(!switchLogin);\n            await otpStart(LoginForm.email);\n            setLoginForm({\n                ...LoginForm,\n                otpAvailable: true,\n            });\n        } catch (err) {\n            console.log(err);\n            setLoginError({\n                ...LoginError,\n                databaseError: err.description,\n                errorCode: err.code,\n            });\n        }\n    };\n\n    const child = React.Children.only(props.children);\n    return React.cloneElement(child, {\n        ...props,\n        onChange,\n        onToggle,\n        switchLogin,\n        onSubmit,\n        LoginForm,\n        LoginError,\n        Continue,\n        validateEmail,\n        onPressContinue,\n        getOtp,\n        socialBtn,\n    });\n}\n"]},"metadata":{},"sourceType":"module"}